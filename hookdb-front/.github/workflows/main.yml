name: CI/CD App with Docker and K8s
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: SSH Test
        uses: appleboy/ssh-action@master
        with:
          host: 158.179.219.214
          username: opc
          key: ${{ secrets.ORACLE_SERVER }}
          script: echo "Conexi√≥n exitosa"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Build App
        run: |
          npm install
          npm run build
      - name: Get short SHA
        id: sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Images
        run: |
          docker buildx create --name multi-arch-builder --use
          docker buildx build --builder multi-arch-builder --platform linux/amd64,linux/arm64 -t desertors/project-peanut:${{ steps.sha.outputs.sha }} --build-arg GIT_COMMIT=${{ steps.sha.outputs.sha }} --push .
          docker buildx imagetools create --tag desertors/project-peanut:latest desertors/project-peanut:${{ steps.sha.outputs.sha }}
          docker buildx imagetools push desertors/project-peanut:latest
          docker buildx imagetools push desertors/project-peanut:${{ steps.sha.outputs.sha }}
          docker buildx rm multi-arch-builder
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: 158.179.219.214
          username: opc
          key: ${{ secrets.ORACLE_SERVER }}
          script: |
            cd k8s
            helm upgrade --install peanut-app ./peanut-app --set app.image=desertors/project-peanut:${{ steps.sha.outputs.sha }}
      - name: Cleanup Docker Images on Server
        uses: appleboy/ssh-action@master
        with:
          host: 158.179.219.214
          username: opc
          key: ${{ secrets.ORACLE_SERVER }}
          script: docker image prune -a -f
